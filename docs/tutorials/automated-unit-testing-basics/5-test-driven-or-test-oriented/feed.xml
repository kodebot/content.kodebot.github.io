<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Test driven or test oriented on Kodebot</title>
    <link>https://kodebot.com/tutorials/automated-unit-testing-basics/5-test-driven-or-test-oriented/</link>
    <description>Recent content in Test driven or test oriented on Kodebot</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Fri, 22 Feb 2019 10:25:49 +0000</lastBuildDate><atom:link href="https://kodebot.com/tutorials/automated-unit-testing-basics/5-test-driven-or-test-oriented/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Test driven development</title>
      <link>https://kodebot.com/tutorials/automated-unit-testing-basics/5-test-driven-or-test-oriented/1-test-driven-development/</link>
      <pubDate>Fri, 22 Feb 2019 10:25:49 +0000</pubDate>
      
      <guid>https://kodebot.com/tutorials/automated-unit-testing-basics/5-test-driven-or-test-oriented/1-test-driven-development/</guid>
      <description>Test driven development (TDD) is a popular approach for writing unit tests.
With this approach, we write a test first, see it fail, then write production code to make the test pass.
Typically, we repeat the steps below in that order
 take a small requirement write failing test for the requirement write production code to make test pass refactor  It is claimed that TDD helps to write code that simple, flexible and just enough to satisfy the requirement.</description>
    </item>
    
    <item>
      <title>Test oriented development</title>
      <link>https://kodebot.com/tutorials/automated-unit-testing-basics/5-test-driven-or-test-oriented/2-test-oriented-development/</link>
      <pubDate>Fri, 22 Feb 2019 10:25:49 +0000</pubDate>
      
      <guid>https://kodebot.com/tutorials/automated-unit-testing-basics/5-test-driven-or-test-oriented/2-test-oriented-development/</guid>
      <description>Test oriented development is another approach where it is not important to write tests first but it is important to write test while writing production code.
Typically, we repeat the steps below in that order
 take a small requirement write production code write unit tests refactor  </description>
    </item>
    
  </channel>
</rss>
